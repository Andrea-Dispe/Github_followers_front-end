[{"D:\\Dropbox\\founders_lair\\client\\src\\index.js":"1","D:\\Dropbox\\founders_lair\\client\\src\\App.js":"2","D:\\Dropbox\\founders_lair\\client\\src\\reportWebVitals.js":"3","D:\\Dropbox\\founders_lair\\client\\src\\utilities\\paginate.js":"4","D:\\Dropbox\\founders_lair\\client\\src\\components\\Pagination.jsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":3698,"mtime":1608518395274,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":192,"mtime":1608191521044,"results":"10","hashOfConfig":"7"},{"size":944,"mtime":1608202587675,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1vt4eei",{"filePath":"15","messages":"16","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"D:\\Dropbox\\founders_lair\\client\\src\\index.js",[],["25","26"],"D:\\Dropbox\\founders_lair\\client\\src\\App.js",["27","28","29","30","31"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Layout } from \"antd\";\n\nimport \"./App.css\";\nimport Pagination from \"./components/Pagination\";\nimport { paginate } from \"./utilities/paginate\";\nimport logo from \"./images/logo.png\";\nimport random from \"./images/random.svg\";\n\nimport { Input } from \"antd\";\nimport { Table } from \"antd\";\n\nfunction App() {\n  const api_url = \"https://api.github.com/users/mosh-hamedani/followers\";\n  const pageSize = 6;\n  const { Header, Footer, Content } = Layout;\n  const { Search } = Input;\n\n  const [followers, setFollowers] = useState([]);\n  const [filterFollowers, setFilterFollowers] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [search, setSearch] = useState(\"\");\n\n  // const users = paginate(followers, currentPage, pageSize);\n\n  const columns = [\n    {\n      title: \"Avatar\",\n      dataIndex: \"avatar_url\",\n      key: \"avatar_url\",\n      render: (dataIndex) => <img src={dataIndex} alt=\"s\" />,\n    },\n    {\n      title: \"Username\",\n      dataIndex: \"login\",\n      key: \"login\",\n    },\n    {\n      title: \"Repository\",\n      dataIndex: \"html_url\",\n      key: \"html_url\",\n      render: (dataIndex) => <a href={dataIndex}>Visit</a>,\n    },\n  ];\n\n  function handlePageChange(page) {\n    setCurrentPage(page);\n  }\n\n  useEffect(() => {\n    axios\n      .get(api_url)\n      .then((res) => {\n        console.log(\"sorted\", res.data);\n        setFollowers(\n          res.data.sort((a, b) =>\n            a.login.toUpperCase() > b.login.toUpperCase() ? 1 : -1\n          )\n        );\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  useEffect(() => {\n    setFilterFollowers(\n      followers.filter((follower) => {\n        return follower.login.toLowerCase().includes(search.toLowerCase());\n      })\n    );\n  }, [search, followers]);\n\n  return (\n    <>\n      <Layout>\n        <Header>\n          <div id=\"header-wrapper\">\n            <div id=\"logo\">\n              <img src={logo} alt=\"\" />\n            </div>\n            <Search\n              placeholder=\"search\"\n              allowClear\n              onChange={(e) => {\n                setSearch(e.target.value);\n              }}\n              style={{ width: 441, margin: \"0 113px\" }}\n            />\n          </div>\n        </Header>\n        <Content>\n          <Table\n            dataSource={filterFollowers}\n            pagination={{ pageSize }}\n            columns={columns}\n          />\n          ;\n          {/* <Pagination\n            itemsCount={followers.length}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={handlePageChange}\n          /> */}\n        </Content>\n        <Footer></Footer>\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n\n// backup table\n\n// <Layout>\n// <Header>\n//   <Navbar />\n// </Header>\n// <Content>\n//   <table>\n//     <thead className=\"columns\">\n//       <tr>\n//         <th>Avatar</th>\n//         <th>Username</th>\n//         <th>Repository</th>\n//       </tr>\n//     </thead>\n//     <tbody>\n//       {users.map((follower) => (\n//         <tr key={follower.id}>\n//           <td>\n//             <img\n//               className=\"avatar\"\n//               src={follower.avatar_url}\n//               alt={follower.login}\n//             />\n//           </td>\n//           <td>{follower.login}</td>\n//           <td>\n//             <a href={follower.html_url}>Visit</a>\n//           </td>\n//         </tr>\n//       ))}\n//     </tbody>\n//   </table>\n\n//   <Pagination\n//     itemsCount={followers.length}\n//     pageSize={pageSize}\n//     currentPage={currentPage}\n//     onPageChange={handlePageChange}\n//   />\n// </Content>\n// <Footer></Footer>\n// </Layout>\n","D:\\Dropbox\\founders_lair\\client\\src\\reportWebVitals.js",[],"D:\\Dropbox\\founders_lair\\client\\src\\utilities\\paginate.js",[],"D:\\Dropbox\\founders_lair\\client\\src\\components\\Pagination.jsx",["32","33"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nfunction Pagination(props) {\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n\n  const pages = _.range(1, pagesCount + 1);\n\n  console.log(currentPage);\n\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map((page) => (\n          <li className={page === currentPage ? \"page-item active\" : \"page-item\"} key={page}>\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n\n}\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n}\n\nexport default Pagination;\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":6,"column":8,"nodeType":"40","messageId":"41","endLine":6,"endColumn":18},{"ruleId":"38","severity":1,"message":"42","line":7,"column":10,"nodeType":"40","messageId":"41","endLine":7,"endColumn":18},{"ruleId":"38","severity":1,"message":"43","line":9,"column":8,"nodeType":"40","messageId":"41","endLine":9,"endColumn":14},{"ruleId":"38","severity":1,"message":"44","line":22,"column":10,"nodeType":"40","messageId":"41","endLine":22,"endColumn":21},{"ruleId":"38","severity":1,"message":"45","line":47,"column":12,"nodeType":"40","messageId":"41","endLine":47,"endColumn":28},{"ruleId":"38","severity":1,"message":"46","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":25},{"ruleId":"47","severity":1,"message":"48","line":20,"column":13,"nodeType":"49","endLine":20,"endColumn":73},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Pagination' is defined but never used.","Identifier","unusedVar","'paginate' is defined but never used.","'random' is defined but never used.","'currentPage' is assigned a value but never used.","'handlePageChange' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]